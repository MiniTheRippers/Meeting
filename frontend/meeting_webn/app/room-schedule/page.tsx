"use client";
import React, { useEffect, useState } from "react";
import axios from "axios";
import Sidebar from '@/components/Sidebar';
import Topbar from "@/components/Topbar";
import FullCalendar from '@fullcalendar/react';
import dayGridPlugin from '@fullcalendar/daygrid';


type Room = {
    _id: string;
    name: string;
    location: string;
    capacity: number;
    equipment: string[];
    image: string;
};

type CalendarEvent = {
    title: string;
    start: string;
    end: string;
    extendedProps?: {
        location?: string;
        equipment?: string;
        detail?: string;
        capacity?: string | number;
    };
};

export default function RoomSchedulePage() {
    const [rooms, setRooms] = useState<Room[]>([]);
    const [selectedRoom, setSelectedRoom] = useState<string>("");
    const [form, setForm] = useState({
        roomName: "",
        location: "",
        capacity: "",
        equipment: "",
        startDate: "",
        startTime: "",
        endDate: "",
        endTime: "",
        detail: "",
    });
    const [events, setEvents] = useState<CalendarEvent[]>([]);

    useEffect(() => {
        axios.get("http://localhost:8000/api/rooms")
            .then(res => {
                console.log("rooms data:", res.data);
                setRooms(res.data);
            })
            .catch(err => {
                setRooms([]);
                console.error("‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", err);
            });
    }, []);

    const handleSelectRoom = (room: Room) => {
        setSelectedRoom(room._id);
        setForm({
            ...form,
            roomName: room.name,
            location: room.location,
            capacity: room.capacity.toString(),
            equipment: room.equipment.join(", "),
        });
    };

    const handleChange = (e) => {
        setForm({ ...form, [e.target.name]: e.target.value });
    };

    const handleSubmit = async (e) => {
        e.preventDefault();
        const data = {
            roomName: form.roomName,
            location: form.location,
            capacity: form.capacity,
            equipment: form.equipment,
            startDate: form.startDate,
            startTime: form.startTime,
            endDate: form.endDate,
            endTime: form.endTime,
            detail: form.detail,
        };
        try {
            await axios.post("http://localhost:8000/api/meeting-requests", data);
            alert("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
            setForm({
                roomName: "",
                location: "",
                capacity: "",
                equipment: "",
                startDate: "",
                startTime: "",
                endDate: "",
                endTime: "",
                detail: "",
            });
        } catch (err) {
            alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•");
        }
    };

    return (
        <div className="flex">
            <Topbar />
            <Sidebar />
            <main className="flex-1 p-8 bg-gray-50 min-h-screen pt-[56px] pl-[80px]">
                <h1 className="text-3xl font-bold mb-4">‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ç‡∏≠‡πÉ‡∏ä‡πâ‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°</h1>
                <div className="flex gap-4 w-full p-4">
                    {/* ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏à‡∏≠‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏° */}
                    <div className="bg-white rounded-lg shadow p-6 flex-1 ">
                        <h2 className="font-bold mb-4 flex items-center gap-2 ">
                            <span>üìù</span> ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Ç‡∏≠‡πÉ‡∏ä‡πâ‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°
                        </h2>
                        <p className=" border-b border-solid border-back-600"></p>

                        <div className='m-2 mt-7'>
                            <form onSubmit={handleSubmit}>
                                <div className="grid grid-cols-2 gap-4 ">
                                    {/* ‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏° */}
                                    <div>
                                        <label>‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏° *</label>
                                        <pre />
                                        <input
                                            name="roomName"
                                            value={form.roomName}
                                            onChange={handleChange}
                                            className="input rounded-lg border-1 w-full h-8"
                                            placeholder=" ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà"
                                        />
                                    </div>
                                    {/* ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á */}
                                    <div>
                                        <label>‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á *</label>
                                        <pre />
                                        <input
                                            name="location"
                                            value={form.location}
                                            onChange={handleChange}
                                            className="input rounded-lg border-1 w-full h-8"
                                            placeholder=" ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà"
                                        />
                                    </div>
                                    {/* ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏∏ */}
                                    <div>
                                        <label>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏∏ *</label>
                                        <pre />
                                        <input
                                            name="capacity"
                                            value={form.capacity}
                                            onChange={handleChange}
                                            className="input rounded-lg border-1 w-full h-8"
                                            placeholder=" ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏∏‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà"
                                        />
                                    </div>
                                    {/* ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå */}
                                    <div>
                                        <label>‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå *</label>
                                        <pre />
                                        <input
                                            name="equipment"
                                            value={form.equipment}
                                            onChange={handleChange}
                                            className="input rounded-lg border-1 w-full h-8"
                                            placeholder=" ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà"
                                        />
                                    </div>
                                    {/* ‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà */}
                                    <div>
                                        <label>‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà *</label>
                                        <pre />
                                        <input
                                            name="startDate"
                                            type="date"
                                            value={form.startDate}
                                            onChange={handleChange}
                                            className="input rounded-lg border-1 w-full h-8"
                                        />
                                    </div>
                                    {/* ‡πÄ‡∏ß‡∏•‡∏≤ */}
                                    <div>
                                        <label>‡πÄ‡∏ß‡∏•‡∏≤ *</label>
                                        <pre />
                                        <input
                                            name="startTime"
                                            type="time"
                                            value={form.startTime}
                                            onChange={handleChange}
                                            className="input rounded-lg border-1 w-full h-8"
                                        />
                                    </div>
                                    {/* ‡∏ñ‡∏∂‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà */}
                                    <div>
                                        <label>‡∏ñ‡∏∂‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà *</label>
                                        <pre />
                                        <input
                                            name="endDate"
                                            type="date"
                                            value={form.endDate}
                                            onChange={handleChange}
                                            className="input rounded-lg border-1 w-full h-8"
                                        />
                                    </div>
                                    {/* ‡πÄ‡∏ß‡∏•‡∏≤ */}
                                    <div>
                                        <label>‡πÄ‡∏ß‡∏•‡∏≤ *</label>
                                        <pre />
                                        <input
                                            name="endTime"
                                            type="time"
                                            value={form.endTime}
                                            onChange={handleChange}
                                            className="input rounded-lg border-1 w-full h-8"
                                        />
                                    </div>
                                </div>
                                {/* ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° */}
                                <div className="mt-4 ">
                                    <label>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° *</label>
                                    <textarea
                                        name="detail"
                                        value={form.detail}
                                        onChange={handleChange}
                                        className="input rounded-lg border-1 w-full h-full"
                                        rows={3}
                                        placeholder="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà"
                                    />
                                </div>
                                {/* ‡∏õ‡∏∏‡πà‡∏° */}
                                <div className="flex gap-2 mt-4">
                                    <button type="submit" className="bg-blue-500 text-white px-4 py-2 rounded">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</button>
                                    <button type="button" className="bg-red-500 text-white px-4 py-2 rounded">‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</button>
                                </div>
                            </form>
                        </div>
                    </div>
                    {/* ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏° */}
                    <div className="w-[350px] bg-white rounded-lg shadow p-4">
                        <h3 className="font-bold mb-2 flex items-center gap-2">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°</h3>
                        <div className="flex flex-col gap-2">
                            {rooms.length === 0 ? (
                                <li>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°</li>
                            ) : (
                                rooms.map(room => (
                                    <div key={room._id} onClick={() => handleSelectRoom(room)} style={{cursor: "pointer"}} className="border rounded-lg p-2 flex gap-2 items-center cursor-pointer hover:border-blue-500">
                                        <img src={room.image || "/room1.png"} alt={room.name} className="w-12 h-12" />
                                        <div>
                                            <div className="font-bold text-blue-600">{room.name}</div>
                                            <div className="text-xs">‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏∏ : {room.capacity} ‡∏Ñ‡∏ô</div>
                                            <div className="text-xs">‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á : {room.location}</div>
                                            <div className="text-xs">‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå : {room.equipment.join(", ")}</div>
                                        </div>
                                    </div>
                                ))
                            )}
                        </div>
                    </div>
                    
                </div>
            </main>
        </div>
    );
} 